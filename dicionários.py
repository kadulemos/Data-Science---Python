# -*- coding: utf-8 -*-
"""Dicionários.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zIA7CtEeDw1wxrNkwwOUI-FJqsHDWpMz

<h2> Trabalhando com Dicionários </h2>
"""

# Criando um Dicionário as {} são as principais diferenças
dic = {}
type (dic)

# Os dicionários trabalham com o conceito de "chave:valor"
# Dicionários podem conter outros dicionários e listas
pessoas = {'Rodrigo':30, 'Marcela':30, 'Maria':55, 'Jose':80, 'pesos':{'Rodrigo': 68, 'Maria':70, 'Jose': 87}, 'Valores': [1,3,5,400,5,6], 'Strings':['MinerandoDados.com.br', 'Data Science', 'Machine Learning']}

# Imprimindo o dicionário
pessoas

# Acessando os valores de um dicionário a partir das chaves
# Dentro do dicionários pessoas buscar o valor de Jose
pessoas['Jose']

# Aparece um erro quando se tenta buscar um elemento que não existe no dicionário 
# Chave não encontrada
pessoas['Luis']

# Acessando dicionário aninhado
# Dentro do dicionário principal {pessoas}, buscar no dicionário {pesos} o valor da chave 'Rodrigo'
pessoas ['pesos']['Rodrigo']

# Acessando lista dentro do dicionário
# Dentro do dicionário principal {pessoas} buscar na lista ['String'] o elemento na posição zero(0)
pessoas ['Strings'][0]

"""<h2> Atualizando Dicionários </h2>"""

# Atualizando o valor de uma chave
pessoas ['Rodrigo'] = 31

# Imprimindo o valor da chave 'Rodrigo'
pessoas ['Rodrigo']

# Adicionando chaves e valores aos dicionários
pessoas ['Luis'] = 45

# Verificando a adição da chave 'Luis'
pessoas

# Apaga elementos do dicionário
del pessoas ['Luis']
pessoas

"""<h2> Métodos disponíveis </h2>"""

# Métodos disponíveis, pressione . e a tecla TAB
pessoas.

# Retorna todas as Chaves do Dicionário
pessoas.keys()

# Retorna os Valores de todas as Chaves
pessoas.values()

# Criando um segundo dicionário
pessoas2 = {'Norma':69, 'Eliana':61}
pessoas2

# Atualiza o primeiro dicionário adionando elementos do segundo
pessoas.update(pessoas2)
pessoas

# Retorna o valor da chave caso ela exista, senão retorna o valor do parâmetro.
pessoas.get('Marcos', 'Não existe')

pessoas.get('Maria', 'Não existe')

# retorna o valor da chave caso ela exista, senão insere a chave e o valor no dicionário
pessoas.setdefault('Marcos',30)

pessoas

# Retorna o valor da chave e remove esta. Se não for encontrada retorna o valor passado por parâmetro.
pessoas.pop('Rodrigo', 'Essa chave já foi removida')

pessoas.pop('Rodrigo', 'Essa chave já foi removida')

pessoas

# Apaga o conteúdo do dicionário
pessoas.clear()

pessoas

