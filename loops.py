# -*- coding: utf-8 -*-
"""Loops.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-8PRYivPXrD6YKd1WmDPKKiWzz3gx3dY

<h2> Trabalhando com Loops </h2>
"""

# Os loops são usados no Python na seguinte forma (sintaxe):
for i in coleção:
  <execute uma ou mais ações>

# A coleção pode ser uma lista de NÚMEROS ou ainda uma lista de STRINGS, ou um ARQUIVO, uma TUPLA, um dicionário e assim por diante.

# Exemplo de loop com uma Lista
for i in [1,2,3,4,5]:
  print('Valor: ', i)

# Exemplo de loop com uma String
for caracter in 'Minerando Dados, a casa do Cientista de Dados':
  print (caracter)

# Exemplo de loop com uma lista de strings
automoveis = ['Ferrari', 'Porshe', 'Lamborghini']
for carro in automoveis:
  print (carro)

# Loops com Dicionários
pessoas_idade = {'Rodrigo':30, 'Maria':25, 'Jose':65}
for p in pessoas_idade:
  print (p)

# Loops com Dicionários extraindo os valores
for p in pessoas_idade.values(): 
  print(p)

# Loops com Dicionários extraindo as chaves e os valores
for p in pessoas_idade:
  print(p, pessoas_idade[p])

# OUTRA FORMA => de imprimir as chaves e os valores de um Dicionário
for chave, valor in pessoas_idade.items():
  print('{} tem {} anos'.format(chave,valor))

# Loops com estruturas condicionais
# Imprimindo apenas números ímpares
num = [1,2,3,4,5,6,7,8,9,10]
for i in num:
  if i %2 > 0:
    print(i)

# Imprimindo apenas números pares
for i in num:
  if i %2 == 0:
    print(i)

# Usando a função ZIP para concatenar listas
indice = [10,15,20]
linhas = ['Olá mundo!','Python é uma linguagem sensacional','Minerando Dados a sua comunidade de Data Science']
for i,l in zip(indice,linhas):
  print(i,l)

"""<h2> Loops Aninhados </h2>"""

# A cada execução do Primeiro Loop, TODO o segundo loop será executado
for i in ['1a fase', '2a fase', '3a fase']:
  print (i)
  for y in ['Maçã', 'Bananas', 'Uvas']:
    print (y)

"""<h2> Instrução Break </h2>"""

# A instrução break é usada para encerrar um loop (como resultado o critério avaliado deixa de ser exibido)
for letra in 'Python':
  if letra == 'o':
    break
  print ('Letra: ', letra)

print ('\n\nContinuando o programa...')

"""<h2> Instrução Continue </h2>"""

# A instrução continue checa a condição inicial do loop e continua sua execução (como resultado o critério não é exibido e o loop continua)
for letra in 'Python':
  if letra == 'o':
    continue
  print ('Letra: ', letra)